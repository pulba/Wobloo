---
import Home from "../../layouts/home.astro";
import Aside from "../../layouts/aside.astro";
import Postcard from "../../components/postcard.astro";
import { formatBlogPosts } from "../../utils/helpers";
import Pagination from "../../components/pagination.astro";

const allPosts = import.meta.glob('../posts/*.md', { eager: true });

interface BlogPost {
  frontmatter: {
    title: string;
    date: string;
    excerpt: string;
  };
  url: string;
}

// Konversi ke array dan beri tahu TypeScript tipe dari objeknya
const posts = Object.values(allPosts)
  .map((post) => post as BlogPost)
  .sort((a, b) => {
    const dateA = new Date(a.frontmatter.date).getTime();
    const dateB = new Date(b.frontmatter.date).getTime();
    return dateB - dateA;
  });

const ITEMS_PER_PAGE = 5;
const currentPage = parseInt(Astro.params.page) || 1;
const totalPages = Math.ceil(posts.length / ITEMS_PER_PAGE);

const start = (currentPage - 1) * ITEMS_PER_PAGE;
const end = start + ITEMS_PER_PAGE;
const paginatedPosts = posts.slice(start, end);

const prevUrl = currentPage > 1 ? `/posts/${currentPage - 1}` : null;
const nextUrl = currentPage < totalPages ? `/posts/${currentPage + 1}` : null;

---

<Home title="Blog |">
  <section>
    <div class="container px-6 py-12 mx-auto">
      <div
        class="flex flex-col lg:flex-row gap-y-8 lg:divide-x divide-gray-100">
          <div class="w-full lg:w-2/3 lg:px-8 my-8">
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-x-4 gap-y-8">
              {paginatedPosts.map((post) => (
                <div class="border rounded-lg shadow-lg">
                    <Postcard frontmatter={post.frontmatter} url={post.url} />
                </div>
              ))}
            </div>
            <Pagination prevUrl={prevUrl} nextUrl={nextUrl} />           
          </div>
        <Aside />
      </div>
    </div>
  </section>
</Home>
